<?php
/**
 * UpdatePackageDetails
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\EasyShipV20220323
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Easy Ship
 *
 * The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.
 *
 * OpenAPI spec version: 2022-03-23
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\ObjectSerializer;

/**
 * UpdatePackageDetails Class Doc Comment
 *
 * @category Class
 * @description Request to update the time slot of a package.
 * @package  Glue\SpApi\OpenAPI\Clients\EasyShipV20220323
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UpdatePackageDetails implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'UpdatePackageDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'scheduledPackageId' => '\Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\ScheduledPackageId',
        'packageTimeSlot' => '\Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\TimeSlot'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'scheduledPackageId' => null,
        'packageTimeSlot' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'scheduledPackageId' => 'scheduledPackageId',
        'packageTimeSlot' => 'packageTimeSlot'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'scheduledPackageId' => 'setScheduledPackageId',
        'packageTimeSlot' => 'setPackageTimeSlot'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'scheduledPackageId' => 'getScheduledPackageId',
        'packageTimeSlot' => 'getPackageTimeSlot'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['scheduledPackageId'] = isset($data['scheduledPackageId']) ? $data['scheduledPackageId'] : null;
        $this->container['packageTimeSlot'] = isset($data['packageTimeSlot']) ? $data['packageTimeSlot'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['scheduledPackageId'] === null) {
            $invalidProperties[] = "'scheduledPackageId' can't be null";
        }
        if ($this->container['packageTimeSlot'] === null) {
            $invalidProperties[] = "'packageTimeSlot' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets scheduledPackageId
     *
     * @return \Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\ScheduledPackageId
     */
    public function getScheduledPackageId()
    {
        return $this->container['scheduledPackageId'];
    }

    /**
     * Sets scheduledPackageId
     *
     * @param \Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\ScheduledPackageId $scheduledPackageId scheduledPackageId
     *
     * @return $this
     */
    public function setScheduledPackageId($scheduledPackageId)
    {
        $this->container['scheduledPackageId'] = $scheduledPackageId;

        return $this;
    }

    /**
     * Gets packageTimeSlot
     *
     * @return \Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\TimeSlot
     */
    public function getPackageTimeSlot()
    {
        return $this->container['packageTimeSlot'];
    }

    /**
     * Sets packageTimeSlot
     *
     * @param \Glue\SpApi\OpenAPI\Clients\EasyShipV20220323\Model\TimeSlot $packageTimeSlot packageTimeSlot
     *
     * @return $this
     */
    public function setPackageTimeSlot($packageTimeSlot)
    {
        $this->container['packageTimeSlot'] = $packageTimeSlot;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


