<?php
/**
 * FulfillmentShipment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\ObjectSerializer;

/**
 * FulfillmentShipment Class Doc Comment
 *
 * @category Class
 * @description Delivery and item information for a shipment in a fulfillment order.
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FulfillmentShipment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'FulfillmentShipment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'amazonShipmentId' => 'string',
        'fulfillmentCenterId' => 'string',
        'fulfillmentShipmentStatus' => 'string',
        'shippingDate' => '\DateTime',
        'estimatedArrivalDate' => '\DateTime',
        'shippingNotes' => 'string[]',
        'fulfillmentShipmentItem' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentItem[]',
        'fulfillmentShipmentPackage' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentPackage[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'amazonShipmentId' => null,
        'fulfillmentCenterId' => null,
        'fulfillmentShipmentStatus' => null,
        'shippingDate' => 'date-time',
        'estimatedArrivalDate' => 'date-time',
        'shippingNotes' => null,
        'fulfillmentShipmentItem' => null,
        'fulfillmentShipmentPackage' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amazonShipmentId' => 'amazonShipmentId',
        'fulfillmentCenterId' => 'fulfillmentCenterId',
        'fulfillmentShipmentStatus' => 'fulfillmentShipmentStatus',
        'shippingDate' => 'shippingDate',
        'estimatedArrivalDate' => 'estimatedArrivalDate',
        'shippingNotes' => 'shippingNotes',
        'fulfillmentShipmentItem' => 'fulfillmentShipmentItem',
        'fulfillmentShipmentPackage' => 'fulfillmentShipmentPackage'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amazonShipmentId' => 'setAmazonShipmentId',
        'fulfillmentCenterId' => 'setFulfillmentCenterId',
        'fulfillmentShipmentStatus' => 'setFulfillmentShipmentStatus',
        'shippingDate' => 'setShippingDate',
        'estimatedArrivalDate' => 'setEstimatedArrivalDate',
        'shippingNotes' => 'setShippingNotes',
        'fulfillmentShipmentItem' => 'setFulfillmentShipmentItem',
        'fulfillmentShipmentPackage' => 'setFulfillmentShipmentPackage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amazonShipmentId' => 'getAmazonShipmentId',
        'fulfillmentCenterId' => 'getFulfillmentCenterId',
        'fulfillmentShipmentStatus' => 'getFulfillmentShipmentStatus',
        'shippingDate' => 'getShippingDate',
        'estimatedArrivalDate' => 'getEstimatedArrivalDate',
        'shippingNotes' => 'getShippingNotes',
        'fulfillmentShipmentItem' => 'getFulfillmentShipmentItem',
        'fulfillmentShipmentPackage' => 'getFulfillmentShipmentPackage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const FULFILLMENT_SHIPMENT_STATUS_PENDING = 'PENDING';
    const FULFILLMENT_SHIPMENT_STATUS_SHIPPED = 'SHIPPED';
    const FULFILLMENT_SHIPMENT_STATUS_CANCELLED_BY_FULFILLER = 'CANCELLED_BY_FULFILLER';
    const FULFILLMENT_SHIPMENT_STATUS_CANCELLED_BY_SELLER = 'CANCELLED_BY_SELLER';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFulfillmentShipmentStatusAllowableValues()
    {
        return [
            self::FULFILLMENT_SHIPMENT_STATUS_PENDING,
            self::FULFILLMENT_SHIPMENT_STATUS_SHIPPED,
            self::FULFILLMENT_SHIPMENT_STATUS_CANCELLED_BY_FULFILLER,
            self::FULFILLMENT_SHIPMENT_STATUS_CANCELLED_BY_SELLER,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['amazonShipmentId'] = isset($data['amazonShipmentId']) ? $data['amazonShipmentId'] : null;
        $this->container['fulfillmentCenterId'] = isset($data['fulfillmentCenterId']) ? $data['fulfillmentCenterId'] : null;
        $this->container['fulfillmentShipmentStatus'] = isset($data['fulfillmentShipmentStatus']) ? $data['fulfillmentShipmentStatus'] : null;
        $this->container['shippingDate'] = isset($data['shippingDate']) ? $data['shippingDate'] : null;
        $this->container['estimatedArrivalDate'] = isset($data['estimatedArrivalDate']) ? $data['estimatedArrivalDate'] : null;
        $this->container['shippingNotes'] = isset($data['shippingNotes']) ? $data['shippingNotes'] : null;
        $this->container['fulfillmentShipmentItem'] = isset($data['fulfillmentShipmentItem']) ? $data['fulfillmentShipmentItem'] : null;
        $this->container['fulfillmentShipmentPackage'] = isset($data['fulfillmentShipmentPackage']) ? $data['fulfillmentShipmentPackage'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['amazonShipmentId'] === null) {
            $invalidProperties[] = "'amazonShipmentId' can't be null";
        }
        if ($this->container['fulfillmentCenterId'] === null) {
            $invalidProperties[] = "'fulfillmentCenterId' can't be null";
        }
        if ($this->container['fulfillmentShipmentStatus'] === null) {
            $invalidProperties[] = "'fulfillmentShipmentStatus' can't be null";
        }
        $allowedValues = $this->getFulfillmentShipmentStatusAllowableValues();
        if (!is_null($this->container['fulfillmentShipmentStatus']) && !in_array($this->container['fulfillmentShipmentStatus'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'fulfillmentShipmentStatus', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['fulfillmentShipmentItem'] === null) {
            $invalidProperties[] = "'fulfillmentShipmentItem' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amazonShipmentId
     *
     * @return string
     */
    public function getAmazonShipmentId()
    {
        return $this->container['amazonShipmentId'];
    }

    /**
     * Sets amazonShipmentId
     *
     * @param string $amazonShipmentId A shipment identifier assigned by Amazon.
     *
     * @return $this
     */
    public function setAmazonShipmentId($amazonShipmentId)
    {
        $this->container['amazonShipmentId'] = $amazonShipmentId;

        return $this;
    }

    /**
     * Gets fulfillmentCenterId
     *
     * @return string
     */
    public function getFulfillmentCenterId()
    {
        return $this->container['fulfillmentCenterId'];
    }

    /**
     * Sets fulfillmentCenterId
     *
     * @param string $fulfillmentCenterId An identifier for the fulfillment center that the shipment will be sent from.
     *
     * @return $this
     */
    public function setFulfillmentCenterId($fulfillmentCenterId)
    {
        $this->container['fulfillmentCenterId'] = $fulfillmentCenterId;

        return $this;
    }

    /**
     * Gets fulfillmentShipmentStatus
     *
     * @return string
     */
    public function getFulfillmentShipmentStatus()
    {
        return $this->container['fulfillmentShipmentStatus'];
    }

    /**
     * Sets fulfillmentShipmentStatus
     *
     * @param string $fulfillmentShipmentStatus The current status of the shipment.
     *
     * @return $this
     */
    public function setFulfillmentShipmentStatus($fulfillmentShipmentStatus)
    {
        $allowedValues = $this->getFulfillmentShipmentStatusAllowableValues();
        if (!in_array($fulfillmentShipmentStatus, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'fulfillmentShipmentStatus', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['fulfillmentShipmentStatus'] = $fulfillmentShipmentStatus;

        return $this;
    }

    /**
     * Gets shippingDate
     *
     * @return \DateTime|null
     */
    public function getShippingDate()
    {
        return $this->container['shippingDate'];
    }

    /**
     * Sets shippingDate
     *
     * @param \DateTime|null $shippingDate shippingDate
     *
     * @return $this
     */
    public function setShippingDate($shippingDate)
    {
        $this->container['shippingDate'] = $shippingDate;

        return $this;
    }

    /**
     * Gets estimatedArrivalDate
     *
     * @return \DateTime|null
     */
    public function getEstimatedArrivalDate()
    {
        return $this->container['estimatedArrivalDate'];
    }

    /**
     * Sets estimatedArrivalDate
     *
     * @param \DateTime|null $estimatedArrivalDate estimatedArrivalDate
     *
     * @return $this
     */
    public function setEstimatedArrivalDate($estimatedArrivalDate)
    {
        $this->container['estimatedArrivalDate'] = $estimatedArrivalDate;

        return $this;
    }

    /**
     * Gets shippingNotes
     *
     * @return string[]|null
     */
    public function getShippingNotes()
    {
        return $this->container['shippingNotes'];
    }

    /**
     * Sets shippingNotes
     *
     * @param string[]|null $shippingNotes Provides additional insight into shipment timeline. Primairly used to communicate that actual delivery dates aren't available.
     *
     * @return $this
     */
    public function setShippingNotes($shippingNotes)
    {
        $this->container['shippingNotes'] = $shippingNotes;

        return $this;
    }

    /**
     * Gets fulfillmentShipmentItem
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentItem[]
     */
    public function getFulfillmentShipmentItem()
    {
        return $this->container['fulfillmentShipmentItem'];
    }

    /**
     * Sets fulfillmentShipmentItem
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentItem[] $fulfillmentShipmentItem An array of fulfillment shipment item information.
     *
     * @return $this
     */
    public function setFulfillmentShipmentItem($fulfillmentShipmentItem)
    {
        $this->container['fulfillmentShipmentItem'] = $fulfillmentShipmentItem;

        return $this;
    }

    /**
     * Gets fulfillmentShipmentPackage
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentPackage[]|null
     */
    public function getFulfillmentShipmentPackage()
    {
        return $this->container['fulfillmentShipmentPackage'];
    }

    /**
     * Sets fulfillmentShipmentPackage
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentOutboundV20200701\Model\FulfillmentShipmentPackage[]|null $fulfillmentShipmentPackage An array of fulfillment shipment package information.
     *
     * @return $this
     */
    public function setFulfillmentShipmentPackage($fulfillmentShipmentPackage)
    {
        $this->container['fulfillmentShipmentPackage'] = $fulfillmentShipmentPackage;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


