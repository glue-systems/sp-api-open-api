<?php
/**
 * GetPrepInstructionsResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\ObjectSerializer;

/**
 * GetPrepInstructionsResult Class Doc Comment
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GetPrepInstructionsResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'GetPrepInstructionsResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sKUPrepInstructionsList' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SKUPrepInstructions[]',
        'invalidSKUList' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidSKU[]',
        'aSINPrepInstructionsList' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\ASINPrepInstructions[]',
        'invalidASINList' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidASIN[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'sKUPrepInstructionsList' => null,
        'invalidSKUList' => null,
        'aSINPrepInstructionsList' => null,
        'invalidASINList' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sKUPrepInstructionsList' => 'SKUPrepInstructionsList',
        'invalidSKUList' => 'InvalidSKUList',
        'aSINPrepInstructionsList' => 'ASINPrepInstructionsList',
        'invalidASINList' => 'InvalidASINList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sKUPrepInstructionsList' => 'setSKUPrepInstructionsList',
        'invalidSKUList' => 'setInvalidSKUList',
        'aSINPrepInstructionsList' => 'setASINPrepInstructionsList',
        'invalidASINList' => 'setInvalidASINList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sKUPrepInstructionsList' => 'getSKUPrepInstructionsList',
        'invalidSKUList' => 'getInvalidSKUList',
        'aSINPrepInstructionsList' => 'getASINPrepInstructionsList',
        'invalidASINList' => 'getInvalidASINList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sKUPrepInstructionsList'] = isset($data['sKUPrepInstructionsList']) ? $data['sKUPrepInstructionsList'] : null;
        $this->container['invalidSKUList'] = isset($data['invalidSKUList']) ? $data['invalidSKUList'] : null;
        $this->container['aSINPrepInstructionsList'] = isset($data['aSINPrepInstructionsList']) ? $data['aSINPrepInstructionsList'] : null;
        $this->container['invalidASINList'] = isset($data['invalidASINList']) ? $data['invalidASINList'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sKUPrepInstructionsList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SKUPrepInstructions[]|null
     */
    public function getSKUPrepInstructionsList()
    {
        return $this->container['sKUPrepInstructionsList'];
    }

    /**
     * Sets sKUPrepInstructionsList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SKUPrepInstructions[]|null $sKUPrepInstructionsList A list of SKU labeling requirements and item preparation instructions.
     *
     * @return $this
     */
    public function setSKUPrepInstructionsList($sKUPrepInstructionsList)
    {
        $this->container['sKUPrepInstructionsList'] = $sKUPrepInstructionsList;

        return $this;
    }

    /**
     * Gets invalidSKUList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidSKU[]|null
     */
    public function getInvalidSKUList()
    {
        return $this->container['invalidSKUList'];
    }

    /**
     * Sets invalidSKUList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidSKU[]|null $invalidSKUList A list of invalid SKU values and the reason they are invalid.
     *
     * @return $this
     */
    public function setInvalidSKUList($invalidSKUList)
    {
        $this->container['invalidSKUList'] = $invalidSKUList;

        return $this;
    }

    /**
     * Gets aSINPrepInstructionsList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\ASINPrepInstructions[]|null
     */
    public function getASINPrepInstructionsList()
    {
        return $this->container['aSINPrepInstructionsList'];
    }

    /**
     * Sets aSINPrepInstructionsList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\ASINPrepInstructions[]|null $aSINPrepInstructionsList A list of item preparation instructions.
     *
     * @return $this
     */
    public function setASINPrepInstructionsList($aSINPrepInstructionsList)
    {
        $this->container['aSINPrepInstructionsList'] = $aSINPrepInstructionsList;

        return $this;
    }

    /**
     * Gets invalidASINList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidASIN[]|null
     */
    public function getInvalidASINList()
    {
        return $this->container['invalidASINList'];
    }

    /**
     * Sets invalidASINList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\InvalidASIN[]|null $invalidASINList A list of invalid ASIN values and the reasons they are invalid.
     *
     * @return $this
     */
    public function setInvalidASINList($invalidASINList)
    {
        $this->container['invalidASINList'] = $invalidASINList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


