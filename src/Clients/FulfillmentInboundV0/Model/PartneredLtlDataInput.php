<?php
/**
 * PartneredLtlDataInput
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\ObjectSerializer;

/**
 * PartneredLtlDataInput Class Doc Comment
 *
 * @category Class
 * @description Information that is required by an Amazon-partnered carrier to ship a Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.
 * @package  Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PartneredLtlDataInput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PartneredLtlDataInput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'contact' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Contact',
        'boxCount' => 'int',
        'sellerFreightClass' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SellerFreightClass',
        'freightReadyDate' => '\DateTime',
        'palletList' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Pallet[]',
        'totalWeight' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Weight',
        'sellerDeclaredValue' => '\Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Amount'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'contact' => null,
        'boxCount' => 'int64',
        'sellerFreightClass' => null,
        'freightReadyDate' => 'date',
        'palletList' => null,
        'totalWeight' => null,
        'sellerDeclaredValue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'contact' => 'Contact',
        'boxCount' => 'BoxCount',
        'sellerFreightClass' => 'SellerFreightClass',
        'freightReadyDate' => 'FreightReadyDate',
        'palletList' => 'PalletList',
        'totalWeight' => 'TotalWeight',
        'sellerDeclaredValue' => 'SellerDeclaredValue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'contact' => 'setContact',
        'boxCount' => 'setBoxCount',
        'sellerFreightClass' => 'setSellerFreightClass',
        'freightReadyDate' => 'setFreightReadyDate',
        'palletList' => 'setPalletList',
        'totalWeight' => 'setTotalWeight',
        'sellerDeclaredValue' => 'setSellerDeclaredValue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'contact' => 'getContact',
        'boxCount' => 'getBoxCount',
        'sellerFreightClass' => 'getSellerFreightClass',
        'freightReadyDate' => 'getFreightReadyDate',
        'palletList' => 'getPalletList',
        'totalWeight' => 'getTotalWeight',
        'sellerDeclaredValue' => 'getSellerDeclaredValue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['boxCount'] = isset($data['boxCount']) ? $data['boxCount'] : null;
        $this->container['sellerFreightClass'] = isset($data['sellerFreightClass']) ? $data['sellerFreightClass'] : null;
        $this->container['freightReadyDate'] = isset($data['freightReadyDate']) ? $data['freightReadyDate'] : null;
        $this->container['palletList'] = isset($data['palletList']) ? $data['palletList'] : null;
        $this->container['totalWeight'] = isset($data['totalWeight']) ? $data['totalWeight'] : null;
        $this->container['sellerDeclaredValue'] = isset($data['sellerDeclaredValue']) ? $data['sellerDeclaredValue'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets contact
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Contact|null
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Contact|null $contact contact
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets boxCount
     *
     * @return int|null
     */
    public function getBoxCount()
    {
        return $this->container['boxCount'];
    }

    /**
     * Sets boxCount
     *
     * @param int|null $boxCount boxCount
     *
     * @return $this
     */
    public function setBoxCount($boxCount)
    {
        $this->container['boxCount'] = $boxCount;

        return $this;
    }

    /**
     * Gets sellerFreightClass
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SellerFreightClass|null
     */
    public function getSellerFreightClass()
    {
        return $this->container['sellerFreightClass'];
    }

    /**
     * Sets sellerFreightClass
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\SellerFreightClass|null $sellerFreightClass sellerFreightClass
     *
     * @return $this
     */
    public function setSellerFreightClass($sellerFreightClass)
    {
        $this->container['sellerFreightClass'] = $sellerFreightClass;

        return $this;
    }

    /**
     * Gets freightReadyDate
     *
     * @return \DateTime|null
     */
    public function getFreightReadyDate()
    {
        return $this->container['freightReadyDate'];
    }

    /**
     * Sets freightReadyDate
     *
     * @param \DateTime|null $freightReadyDate freightReadyDate
     *
     * @return $this
     */
    public function setFreightReadyDate($freightReadyDate)
    {
        $this->container['freightReadyDate'] = $freightReadyDate;

        return $this;
    }

    /**
     * Gets palletList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Pallet[]|null
     */
    public function getPalletList()
    {
        return $this->container['palletList'];
    }

    /**
     * Sets palletList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Pallet[]|null $palletList A list of pallet information.
     *
     * @return $this
     */
    public function setPalletList($palletList)
    {
        $this->container['palletList'] = $palletList;

        return $this;
    }

    /**
     * Gets totalWeight
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Weight|null
     */
    public function getTotalWeight()
    {
        return $this->container['totalWeight'];
    }

    /**
     * Sets totalWeight
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Weight|null $totalWeight totalWeight
     *
     * @return $this
     */
    public function setTotalWeight($totalWeight)
    {
        $this->container['totalWeight'] = $totalWeight;

        return $this;
    }

    /**
     * Gets sellerDeclaredValue
     *
     * @return \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Amount|null
     */
    public function getSellerDeclaredValue()
    {
        return $this->container['sellerDeclaredValue'];
    }

    /**
     * Sets sellerDeclaredValue
     *
     * @param \Glue\SpApi\OpenAPI\Clients\FulfillmentInboundV0\Model\Amount|null $sellerDeclaredValue sellerDeclaredValue
     *
     * @return $this
     */
    public function setSellerDeclaredValue($sellerDeclaredValue)
    {
        $this->container['sellerDeclaredValue'] = $sellerDeclaredValue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


