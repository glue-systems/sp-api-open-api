<?php
/**
 * CreateShipmentRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Merchant Fulfillment
 *
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\ObjectSerializer;

/**
 * CreateShipmentRequest Class Doc Comment
 *
 * @category Class
 * @description Request schema.
 * @package  Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CreateShipmentRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CreateShipmentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'shipmentRequestDetails' => '\Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\ShipmentRequestDetails',
        'shippingServiceId' => 'string',
        'shippingServiceOfferId' => 'string',
        'hazmatType' => '\Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\HazmatType',
        'labelFormatOption' => '\Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\LabelFormatOptionRequest',
        'shipmentLevelSellerInputsList' => '\Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\AdditionalSellerInputs[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'shipmentRequestDetails' => null,
        'shippingServiceId' => null,
        'shippingServiceOfferId' => null,
        'hazmatType' => null,
        'labelFormatOption' => null,
        'shipmentLevelSellerInputsList' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipmentRequestDetails' => 'ShipmentRequestDetails',
        'shippingServiceId' => 'ShippingServiceId',
        'shippingServiceOfferId' => 'ShippingServiceOfferId',
        'hazmatType' => 'HazmatType',
        'labelFormatOption' => 'LabelFormatOption',
        'shipmentLevelSellerInputsList' => 'ShipmentLevelSellerInputsList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipmentRequestDetails' => 'setShipmentRequestDetails',
        'shippingServiceId' => 'setShippingServiceId',
        'shippingServiceOfferId' => 'setShippingServiceOfferId',
        'hazmatType' => 'setHazmatType',
        'labelFormatOption' => 'setLabelFormatOption',
        'shipmentLevelSellerInputsList' => 'setShipmentLevelSellerInputsList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipmentRequestDetails' => 'getShipmentRequestDetails',
        'shippingServiceId' => 'getShippingServiceId',
        'shippingServiceOfferId' => 'getShippingServiceOfferId',
        'hazmatType' => 'getHazmatType',
        'labelFormatOption' => 'getLabelFormatOption',
        'shipmentLevelSellerInputsList' => 'getShipmentLevelSellerInputsList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipmentRequestDetails'] = isset($data['shipmentRequestDetails']) ? $data['shipmentRequestDetails'] : null;
        $this->container['shippingServiceId'] = isset($data['shippingServiceId']) ? $data['shippingServiceId'] : null;
        $this->container['shippingServiceOfferId'] = isset($data['shippingServiceOfferId']) ? $data['shippingServiceOfferId'] : null;
        $this->container['hazmatType'] = isset($data['hazmatType']) ? $data['hazmatType'] : null;
        $this->container['labelFormatOption'] = isset($data['labelFormatOption']) ? $data['labelFormatOption'] : null;
        $this->container['shipmentLevelSellerInputsList'] = isset($data['shipmentLevelSellerInputsList']) ? $data['shipmentLevelSellerInputsList'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['shipmentRequestDetails'] === null) {
            $invalidProperties[] = "'shipmentRequestDetails' can't be null";
        }
        if ($this->container['shippingServiceId'] === null) {
            $invalidProperties[] = "'shippingServiceId' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipmentRequestDetails
     *
     * @return \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\ShipmentRequestDetails
     */
    public function getShipmentRequestDetails()
    {
        return $this->container['shipmentRequestDetails'];
    }

    /**
     * Sets shipmentRequestDetails
     *
     * @param \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\ShipmentRequestDetails $shipmentRequestDetails shipmentRequestDetails
     *
     * @return $this
     */
    public function setShipmentRequestDetails($shipmentRequestDetails)
    {
        $this->container['shipmentRequestDetails'] = $shipmentRequestDetails;

        return $this;
    }

    /**
     * Gets shippingServiceId
     *
     * @return string
     */
    public function getShippingServiceId()
    {
        return $this->container['shippingServiceId'];
    }

    /**
     * Sets shippingServiceId
     *
     * @param string $shippingServiceId An Amazon-defined shipping service identifier.
     *
     * @return $this
     */
    public function setShippingServiceId($shippingServiceId)
    {
        $this->container['shippingServiceId'] = $shippingServiceId;

        return $this;
    }

    /**
     * Gets shippingServiceOfferId
     *
     * @return string|null
     */
    public function getShippingServiceOfferId()
    {
        return $this->container['shippingServiceOfferId'];
    }

    /**
     * Sets shippingServiceOfferId
     *
     * @param string|null $shippingServiceOfferId Identifies a shipping service order made by a carrier.
     *
     * @return $this
     */
    public function setShippingServiceOfferId($shippingServiceOfferId)
    {
        $this->container['shippingServiceOfferId'] = $shippingServiceOfferId;

        return $this;
    }

    /**
     * Gets hazmatType
     *
     * @return \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\HazmatType|null
     */
    public function getHazmatType()
    {
        return $this->container['hazmatType'];
    }

    /**
     * Sets hazmatType
     *
     * @param \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\HazmatType|null $hazmatType hazmatType
     *
     * @return $this
     */
    public function setHazmatType($hazmatType)
    {
        $this->container['hazmatType'] = $hazmatType;

        return $this;
    }

    /**
     * Gets labelFormatOption
     *
     * @return \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\LabelFormatOptionRequest|null
     */
    public function getLabelFormatOption()
    {
        return $this->container['labelFormatOption'];
    }

    /**
     * Sets labelFormatOption
     *
     * @param \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\LabelFormatOptionRequest|null $labelFormatOption labelFormatOption
     *
     * @return $this
     */
    public function setLabelFormatOption($labelFormatOption)
    {
        $this->container['labelFormatOption'] = $labelFormatOption;

        return $this;
    }

    /**
     * Gets shipmentLevelSellerInputsList
     *
     * @return \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\AdditionalSellerInputs[]|null
     */
    public function getShipmentLevelSellerInputsList()
    {
        return $this->container['shipmentLevelSellerInputsList'];
    }

    /**
     * Sets shipmentLevelSellerInputsList
     *
     * @param \Glue\SpApi\OpenAPI\Clients\MerchantFulfillmentV0\Model\AdditionalSellerInputs[]|null $shipmentLevelSellerInputsList A list of additional seller input pairs required to purchase shipping.
     *
     * @return $this
     */
    public function setShipmentLevelSellerInputsList($shipmentLevelSellerInputsList)
    {
        $this->container['shipmentLevelSellerInputsList'] = $shipmentLevelSellerInputsList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


