<?php
/**
 * ShipmentConfirmation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\ObjectSerializer;

/**
 * ShipmentConfirmation Class Doc Comment
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ShipmentConfirmation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShipmentConfirmation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'purchaseOrderNumber' => 'string',
        'shipmentDetails' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\ShipmentDetails',
        'sellingParty' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification',
        'shipFromParty' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification',
        'items' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Item[]',
        'containers' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Container[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'purchaseOrderNumber' => null,
        'shipmentDetails' => null,
        'sellingParty' => null,
        'shipFromParty' => null,
        'items' => null,
        'containers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'purchaseOrderNumber' => 'purchaseOrderNumber',
        'shipmentDetails' => 'shipmentDetails',
        'sellingParty' => 'sellingParty',
        'shipFromParty' => 'shipFromParty',
        'items' => 'items',
        'containers' => 'containers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'purchaseOrderNumber' => 'setPurchaseOrderNumber',
        'shipmentDetails' => 'setShipmentDetails',
        'sellingParty' => 'setSellingParty',
        'shipFromParty' => 'setShipFromParty',
        'items' => 'setItems',
        'containers' => 'setContainers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'purchaseOrderNumber' => 'getPurchaseOrderNumber',
        'shipmentDetails' => 'getShipmentDetails',
        'sellingParty' => 'getSellingParty',
        'shipFromParty' => 'getShipFromParty',
        'items' => 'getItems',
        'containers' => 'getContainers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['purchaseOrderNumber'] = isset($data['purchaseOrderNumber']) ? $data['purchaseOrderNumber'] : null;
        $this->container['shipmentDetails'] = isset($data['shipmentDetails']) ? $data['shipmentDetails'] : null;
        $this->container['sellingParty'] = isset($data['sellingParty']) ? $data['sellingParty'] : null;
        $this->container['shipFromParty'] = isset($data['shipFromParty']) ? $data['shipFromParty'] : null;
        $this->container['items'] = isset($data['items']) ? $data['items'] : null;
        $this->container['containers'] = isset($data['containers']) ? $data['containers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['purchaseOrderNumber'] === null) {
            $invalidProperties[] = "'purchaseOrderNumber' can't be null";
        }
        if (!preg_match("/^[a-zA-Z0-9]+$/", $this->container['purchaseOrderNumber'])) {
            $invalidProperties[] = "invalid value for 'purchaseOrderNumber', must be conform to the pattern /^[a-zA-Z0-9]+$/.";
        }

        if ($this->container['shipmentDetails'] === null) {
            $invalidProperties[] = "'shipmentDetails' can't be null";
        }
        if ($this->container['sellingParty'] === null) {
            $invalidProperties[] = "'sellingParty' can't be null";
        }
        if ($this->container['shipFromParty'] === null) {
            $invalidProperties[] = "'shipFromParty' can't be null";
        }
        if ($this->container['items'] === null) {
            $invalidProperties[] = "'items' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets purchaseOrderNumber
     *
     * @return string
     */
    public function getPurchaseOrderNumber()
    {
        return $this->container['purchaseOrderNumber'];
    }

    /**
     * Sets purchaseOrderNumber
     *
     * @param string $purchaseOrderNumber Purchase order number corresponding to the shipment.
     *
     * @return $this
     */
    public function setPurchaseOrderNumber($purchaseOrderNumber)
    {

        if ((!preg_match("/^[a-zA-Z0-9]+$/", $purchaseOrderNumber))) {
            throw new \InvalidArgumentException("invalid value for $purchaseOrderNumber when calling ShipmentConfirmation., must conform to the pattern /^[a-zA-Z0-9]+$/.");
        }

        $this->container['purchaseOrderNumber'] = $purchaseOrderNumber;

        return $this;
    }

    /**
     * Gets shipmentDetails
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\ShipmentDetails
     */
    public function getShipmentDetails()
    {
        return $this->container['shipmentDetails'];
    }

    /**
     * Sets shipmentDetails
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\ShipmentDetails $shipmentDetails shipmentDetails
     *
     * @return $this
     */
    public function setShipmentDetails($shipmentDetails)
    {
        $this->container['shipmentDetails'] = $shipmentDetails;

        return $this;
    }

    /**
     * Gets sellingParty
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification
     */
    public function getSellingParty()
    {
        return $this->container['sellingParty'];
    }

    /**
     * Sets sellingParty
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification $sellingParty sellingParty
     *
     * @return $this
     */
    public function setSellingParty($sellingParty)
    {
        $this->container['sellingParty'] = $sellingParty;

        return $this;
    }

    /**
     * Gets shipFromParty
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification
     */
    public function getShipFromParty()
    {
        return $this->container['shipFromParty'];
    }

    /**
     * Sets shipFromParty
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\PartyIdentification $shipFromParty shipFromParty
     *
     * @return $this
     */
    public function setShipFromParty($shipFromParty)
    {
        $this->container['shipFromParty'] = $shipFromParty;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Item[]
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Item[] $items Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package.
     *
     * @return $this
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets containers
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Container[]|null
     */
    public function getContainers()
    {
        return $this->container['containers'];
    }

    /**
     * Sets containers
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentShippingV1\Model\Container[]|null $containers Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package.
     *
     * @return $this
     */
    public function setContainers($containers)
    {
        $this->container['containers'] = $containers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


