<?php
/**
 * OrderItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Direct Fulfillment Orders
 *
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model;

use \ArrayAccess;
use \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\ObjectSerializer;

/**
 * OrderItem Class Doc Comment
 *
 * @category Class
 * @package  Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'itemSequenceNumber' => 'string',
        'buyerProductIdentifier' => 'string',
        'vendorProductIdentifier' => 'string',
        'title' => 'string',
        'orderedQuantity' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ItemQuantity',
        'scheduledDeliveryShipment' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ScheduledDeliveryShipment',
        'giftDetails' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\GiftDetails',
        'netPrice' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money',
        'taxDetails' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\OrderItemTaxDetails',
        'totalPrice' => '\Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'itemSequenceNumber' => null,
        'buyerProductIdentifier' => null,
        'vendorProductIdentifier' => null,
        'title' => null,
        'orderedQuantity' => null,
        'scheduledDeliveryShipment' => null,
        'giftDetails' => null,
        'netPrice' => null,
        'taxDetails' => null,
        'totalPrice' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'itemSequenceNumber' => 'itemSequenceNumber',
        'buyerProductIdentifier' => 'buyerProductIdentifier',
        'vendorProductIdentifier' => 'vendorProductIdentifier',
        'title' => 'title',
        'orderedQuantity' => 'orderedQuantity',
        'scheduledDeliveryShipment' => 'scheduledDeliveryShipment',
        'giftDetails' => 'giftDetails',
        'netPrice' => 'netPrice',
        'taxDetails' => 'taxDetails',
        'totalPrice' => 'totalPrice'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'itemSequenceNumber' => 'setItemSequenceNumber',
        'buyerProductIdentifier' => 'setBuyerProductIdentifier',
        'vendorProductIdentifier' => 'setVendorProductIdentifier',
        'title' => 'setTitle',
        'orderedQuantity' => 'setOrderedQuantity',
        'scheduledDeliveryShipment' => 'setScheduledDeliveryShipment',
        'giftDetails' => 'setGiftDetails',
        'netPrice' => 'setNetPrice',
        'taxDetails' => 'setTaxDetails',
        'totalPrice' => 'setTotalPrice'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'itemSequenceNumber' => 'getItemSequenceNumber',
        'buyerProductIdentifier' => 'getBuyerProductIdentifier',
        'vendorProductIdentifier' => 'getVendorProductIdentifier',
        'title' => 'getTitle',
        'orderedQuantity' => 'getOrderedQuantity',
        'scheduledDeliveryShipment' => 'getScheduledDeliveryShipment',
        'giftDetails' => 'getGiftDetails',
        'netPrice' => 'getNetPrice',
        'taxDetails' => 'getTaxDetails',
        'totalPrice' => 'getTotalPrice'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['itemSequenceNumber'] = isset($data['itemSequenceNumber']) ? $data['itemSequenceNumber'] : null;
        $this->container['buyerProductIdentifier'] = isset($data['buyerProductIdentifier']) ? $data['buyerProductIdentifier'] : null;
        $this->container['vendorProductIdentifier'] = isset($data['vendorProductIdentifier']) ? $data['vendorProductIdentifier'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['orderedQuantity'] = isset($data['orderedQuantity']) ? $data['orderedQuantity'] : null;
        $this->container['scheduledDeliveryShipment'] = isset($data['scheduledDeliveryShipment']) ? $data['scheduledDeliveryShipment'] : null;
        $this->container['giftDetails'] = isset($data['giftDetails']) ? $data['giftDetails'] : null;
        $this->container['netPrice'] = isset($data['netPrice']) ? $data['netPrice'] : null;
        $this->container['taxDetails'] = isset($data['taxDetails']) ? $data['taxDetails'] : null;
        $this->container['totalPrice'] = isset($data['totalPrice']) ? $data['totalPrice'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['itemSequenceNumber'] === null) {
            $invalidProperties[] = "'itemSequenceNumber' can't be null";
        }
        if ($this->container['orderedQuantity'] === null) {
            $invalidProperties[] = "'orderedQuantity' can't be null";
        }
        if ($this->container['netPrice'] === null) {
            $invalidProperties[] = "'netPrice' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets itemSequenceNumber
     *
     * @return string
     */
    public function getItemSequenceNumber()
    {
        return $this->container['itemSequenceNumber'];
    }

    /**
     * Sets itemSequenceNumber
     *
     * @param string $itemSequenceNumber Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.
     *
     * @return $this
     */
    public function setItemSequenceNumber($itemSequenceNumber)
    {
        $this->container['itemSequenceNumber'] = $itemSequenceNumber;

        return $this;
    }

    /**
     * Gets buyerProductIdentifier
     *
     * @return string|null
     */
    public function getBuyerProductIdentifier()
    {
        return $this->container['buyerProductIdentifier'];
    }

    /**
     * Sets buyerProductIdentifier
     *
     * @param string|null $buyerProductIdentifier Buyer's standard identification number (ASIN) of an item.
     *
     * @return $this
     */
    public function setBuyerProductIdentifier($buyerProductIdentifier)
    {
        $this->container['buyerProductIdentifier'] = $buyerProductIdentifier;

        return $this;
    }

    /**
     * Gets vendorProductIdentifier
     *
     * @return string|null
     */
    public function getVendorProductIdentifier()
    {
        return $this->container['vendorProductIdentifier'];
    }

    /**
     * Sets vendorProductIdentifier
     *
     * @param string|null $vendorProductIdentifier The vendor selected product identification of the item.
     *
     * @return $this
     */
    public function setVendorProductIdentifier($vendorProductIdentifier)
    {
        $this->container['vendorProductIdentifier'] = $vendorProductIdentifier;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title Title for the item.
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets orderedQuantity
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ItemQuantity
     */
    public function getOrderedQuantity()
    {
        return $this->container['orderedQuantity'];
    }

    /**
     * Sets orderedQuantity
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ItemQuantity $orderedQuantity orderedQuantity
     *
     * @return $this
     */
    public function setOrderedQuantity($orderedQuantity)
    {
        $this->container['orderedQuantity'] = $orderedQuantity;

        return $this;
    }

    /**
     * Gets scheduledDeliveryShipment
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ScheduledDeliveryShipment|null
     */
    public function getScheduledDeliveryShipment()
    {
        return $this->container['scheduledDeliveryShipment'];
    }

    /**
     * Sets scheduledDeliveryShipment
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\ScheduledDeliveryShipment|null $scheduledDeliveryShipment scheduledDeliveryShipment
     *
     * @return $this
     */
    public function setScheduledDeliveryShipment($scheduledDeliveryShipment)
    {
        $this->container['scheduledDeliveryShipment'] = $scheduledDeliveryShipment;

        return $this;
    }

    /**
     * Gets giftDetails
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\GiftDetails|null
     */
    public function getGiftDetails()
    {
        return $this->container['giftDetails'];
    }

    /**
     * Sets giftDetails
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\GiftDetails|null $giftDetails giftDetails
     *
     * @return $this
     */
    public function setGiftDetails($giftDetails)
    {
        $this->container['giftDetails'] = $giftDetails;

        return $this;
    }

    /**
     * Gets netPrice
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money
     */
    public function getNetPrice()
    {
        return $this->container['netPrice'];
    }

    /**
     * Sets netPrice
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money $netPrice netPrice
     *
     * @return $this
     */
    public function setNetPrice($netPrice)
    {
        $this->container['netPrice'] = $netPrice;

        return $this;
    }

    /**
     * Gets taxDetails
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\OrderItemTaxDetails|null
     */
    public function getTaxDetails()
    {
        return $this->container['taxDetails'];
    }

    /**
     * Sets taxDetails
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\OrderItemTaxDetails|null $taxDetails taxDetails
     *
     * @return $this
     */
    public function setTaxDetails($taxDetails)
    {
        $this->container['taxDetails'] = $taxDetails;

        return $this;
    }

    /**
     * Gets totalPrice
     *
     * @return \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money|null
     */
    public function getTotalPrice()
    {
        return $this->container['totalPrice'];
    }

    /**
     * Sets totalPrice
     *
     * @param \Glue\SpApi\OpenAPI\Clients\VendorDirectFulfillmentOrdersV1\Model\Money|null $totalPrice totalPrice
     *
     * @return $this
     */
    public function setTotalPrice($totalPrice)
    {
        $this->container['totalPrice'] = $totalPrice;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


